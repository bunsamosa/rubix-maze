(window.webpackJsonp=window.webpackJsonp||[]).push([[7,10],{1475:function(t,e){},1543:function(t,e){},1547:function(t,e){},1549:function(t,e){},1551:function(t,e){},1748:function(t,e,n){"use strict";n.r(e),n.d(e,"WalletConnectV1Adapter",(function(){return WalletConnectV1Adapter}));var i=n(8),o=n.n(i),a=n(648),r=n(7),s=n(1540);const c=[{name:"Rainbow",chains:[r.g.EIP155],logo:"https://images.web3auth.io/login-rainbow.svg",mobile:{native:"rainbow:",universal:"https://rnbwapp.com"},desktop:{native:"",universal:""}},{name:"MetaMask",chains:[r.g.EIP155],logo:"https://images.web3auth.io/login-metamask.svg",mobile:{native:"metamask:",universal:"https://metamask.app.link"},desktop:{native:"",universal:""}}];function ownKeys(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}class WalletConnectV1Adapter extends r.e{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),o()(this,"name",r.j.WALLET_CONNECT_V1),o()(this,"adapterNamespace",r.c.EIP155),o()(this,"currentChainNamespace",r.g.EIP155),o()(this,"type",r.a.EXTERNAL),o()(this,"adapterOptions",void 0),o()(this,"status",r.d.NOT_READY),o()(this,"adapterData",{uri:"",extensionAdapters:c}),o()(this,"connector",null),o()(this,"wcProvider",null),o()(this,"rehydrated",!1),this.adapterOptions=function _objectSpread(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?ownKeys(Object(n),!0).forEach((function(e){o()(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):ownKeys(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}({},t),this.chainConfig=t.chainConfig||null}get connected(){var t;return!(null===(t=this.connector)||void 0===t||!t.connected)}get provider(){var t;return(null===(t=this.wcProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){super.checkInitializationRequirements(),this.chainConfig||(this.chainConfig=Object(r.n)(r.g.EIP155,1)),this.connector=this.getWalletConnectInstance(),this.wcProvider=new s.WalletConnectProvider({config:{chainConfig:this.chainConfig},connector:this.connector}),this.emit(r.b.READY,r.j.WALLET_CONNECT_V1),this.status=r.d.READY,r.p.debug("initializing wallet connect v1 adapter"),this.connector.connected&&(this.rehydrated=!0,await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}))}async connect(){if(super.checkConnectionRequirements(),!this.connector)throw r.k.notReady("Wallet adapter is not ready yet");if(this.connected)return await this.onConnectHandler({accounts:this.connector.accounts,chainId:this.connector.chainId}),this.provider;if(this.status!==r.d.CONNECTING){var t,e;if(null!==(t=this.adapterOptions.adapterSettings)&&void 0!==t&&t.qrcodeModal)this.connector=this.getWalletConnectInstance(),this.wcProvider=new s.WalletConnectProvider({config:{chainConfig:this.chainConfig,skipLookupNetwork:null===(e=this.adapterOptions.adapterSettings)||void 0===e?void 0:e.skipNetworkSwitching},connector:this.connector});await this.createNewSession(),this.status=r.d.CONNECTING,this.emit(r.b.CONNECTING,{adapter:r.j.WALLET_CONNECT_V1})}return new Promise((t,e)=>{if(!this.connector)return e(r.k.notReady("Wallet adapter is not ready yet"));this.connector.on("modal_closed",async()=>(this.status=r.d.READY,this.emit(r.b.READY,r.j.WALLET_CONNECT_V1),e(new Error("User closed modal"))));try{this.connector.on("connect",async(e,n)=>(e&&this.emit(r.b.ERRORED,e),r.p.debug("connected event emitted by web3auth"),await this.onConnectHandler(n.params[0]),t(this.provider)))}catch(t){r.p.error("Wallet connect v1 adapter error while connecting",t),this.status=r.d.READY,this.rehydrated=!0,this.emit(r.b.ERRORED,t),e(t instanceof r.m?t:r.l.connectionError("Failed to login with wallet connect: ".concat((null==t?void 0:t.message)||"")))}})}async getUserInfo(){if(!this.connected)throw r.l.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};const{cleanup:e}=t;if(!this.connector||!this.connected)throw r.l.notConnectedError("Not connected with wallet");await this.connector.killSession(),this.rehydrated=!1,e?(this.connector=null,this.status=r.d.NOT_READY,this.wcProvider=null):this.status=r.d.READY,this.emit(r.b.DISCONNECTED)}async addChain(t){try{var e;if(!this.wcProvider)throw r.k.notReady("Wallet adapter is not ready yet");const n=null===(e=this.adapterOptions.adapterSettings)||void 0===e?void 0:e.networkSwitchModal;n&&await n.addNetwork({chainConfig:t,appOrigin:window.location.hostname}),await this.wcProvider.addChain(t)}catch(t){r.p.error(t)}}async switchChain(t,e){var n;if(!this.wcProvider)throw r.k.notReady("Wallet adapter is not ready yet");const i=null===(n=this.adapterOptions.adapterSettings)||void 0===n?void 0:n.networkSwitchModal;i&&await i.switchNetwork({currentChainConfig:e,newChainConfig:t,appOrigin:window.location.hostname}),await this.wcProvider.switchChain({chainId:e.chainId,lookup:!1,addChain:!1})}async createNewSession(){var t,e;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{forceNewSession:!1};if(!this.connector)throw r.k.notReady("Wallet adapter is not ready yet");if(n.forceNewSession&&this.connector.pending&&await this.connector.killSession(),null===(t=this.adapterOptions)||void 0===t||null===(e=t.adapterSettings)||void 0===e||!e.qrcodeModal)return new Promise((t,e)=>{var n;if(!this.connector)return e(r.k.notReady("Wallet adapter is not ready yet"));r.p.debug("creating new session for web3auth wallet connect"),this.connector.on("display_uri",async(n,i)=>{var o;if(n)return this.emit(r.b.ERRORED,r.l.connectionError("Failed to display wallet connect qr code")),e(n);const a=i.params[0];return this.updateAdapterData({uri:a,extensionAdapters:c}),null===(o=this.connector)||void 0===o||o.off("display_uri"),t()}),this.connector.createSession({chainId:parseInt((null===(n=this.chainConfig)||void 0===n?void 0:n.chainId)||"0x1",16)}).catch(t=>(r.p.error("error while creating new wallet connect session",t),this.emit(r.b.ERRORED,t),e(t)))});var i;await this.connector.createSession({chainId:parseInt((null===(i=this.chainConfig)||void 0===i?void 0:i.chainId)||"0x1",16)})}async onConnectHandler(t){if(!this.connector||!this.wcProvider)throw r.k.notReady("Wallet adapter is not ready yet");if(!this.chainConfig)throw r.k.invalidParams("Chain config is not set");const{chainId:e}=t;if(r.p.debug("connected chainId in hex"),e!==parseInt(this.chainConfig.chainId,16)){var n,i,o;const t=Object(r.n)(r.g.EIP155,e)||{chainId:"0x".concat(e.toString(16)),displayName:"Unknown Network"},a=null===(n=this.adapterOptions.adapterSettings)||void 0===n?void 0:n.qrcodeModal;if(!a||a&&(null===(i=this.adapterOptions)||void 0===i||null===(o=i.adapterSettings)||void 0===o||!o.skipNetworkSwitching))try{await this.addChain(this.chainConfig),await this.switchChain(t,this.chainConfig),this.connector=this.getWalletConnectInstance()}catch(n){return r.p.error("error while chain switching",n),await this.createNewSession({forceNewSession:!0}),this.emit(r.b.ERRORED,r.k.fromCode(5e3,"Not connected to correct network. Expected: ".concat(this.chainConfig.displayName,", Current: ").concat((null==t?void 0:t.displayName)||e,", Please switch to correct network from wallet"))),this.status=r.d.READY,void(this.rehydrated=!0)}}await this.wcProvider.setupProvider(this.connector),this.subscribeEvents(this.connector),this.status=r.d.CONNECTED,this.emit(r.b.CONNECTED,{adapter:r.j.WALLET_CONNECT_V1,reconnected:this.rehydrated})}subscribeEvents(t){t.on("session_update",async t=>{t&&this.emit(r.b.ERRORED,t)})}getWalletConnectInstance(){const t=this.adapterOptions.adapterSettings||{};return t.bridge=t.bridge||"https://bridge.walletconnect.org",new a.a(t)}}}}]);